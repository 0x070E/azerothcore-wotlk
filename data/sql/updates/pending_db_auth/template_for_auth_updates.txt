DROP PROCEDURE IF EXISTS `updateDb`;
DELIMITER //
CREATE PROCEDURE updateDb ()
proc:BEGIN DECLARE OK VARCHAR(100) DEFAULT "FALSE";

-- ###############################
-- CHANGE FOLLOWING VARIABLES
-- ############################### 

-- fill new_version with result of this bash command: date +%s%N
-- you must run it for each sql updates 
SET @new_version="";
-- set previous required version, or do not touch it if you are not sure
SET @req_version=NULL;

-- ###############################
-- DO NOT CHANGE IT
-- ###############################
SELECT sql_rev INTO OK FROM version_db_auth WHERE sql_rev = @new_version; IF OK <> "FALSE" THEN LEAVE proc; END IF; START TRANSACTION; INSERT INTO version_db_auth VALUES(@new_version,@req_version,NULL); 

-- ###############################
-- INSERT YOUR SQL QUERIES HERE
-- ###############################




-- ###############################
-- TERMINATE YOUR SQL QUERIES HERE
-- ###############################

COMMIT;
END;
//
DELIMITER ;
CALL updateDb();
DROP PROCEDURE IF EXISTS `updateDb`;

